// Copyright (c) 2014-2017 Bitmark Inc.
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

package blockring_test

import (
	"bytes"
	"encoding/binary"
	"github.com/bitmark-inc/bitmarkd/blockdigest"
	"github.com/bitmark-inc/bitmarkd/blockring"
	"github.com/bitmark-inc/logger"
	"testing"
)

var testblocks [][]byte = [][]byte{
	[]byte{
		0x86, 0xa7, 0xad, 0x53, 0x10, 0x28, 0x98, 0xb7, 0x80, 0x60, 0xb5, 0x88, 0xf0, 0x08, 0x1b, 0xbd,
		0x46, 0xbb, 0x29, 0x5d, 0xab, 0x63, 0xcf, 0x84, 0x72, 0x01, 0xe4, 0xaf, 0xf3, 0x34, 0x3d, 0xf2,
	},
	[]byte{
		0xea, 0x5c, 0x35, 0x26, 0xde, 0xe6, 0xc0, 0xa9, 0x45, 0x01, 0x96, 0x42, 0xac, 0x37, 0x83, 0x46,
		0xee, 0x05, 0xc2, 0xea, 0xf0, 0xc0, 0x33, 0xd3, 0x45, 0xf2, 0x1b, 0x1f, 0x0a, 0x3e, 0xcf, 0x00,
	},
	[]byte{
		0xc6, 0xb5, 0x98, 0x7d, 0x03, 0xb4, 0xe5, 0x3d, 0xcd, 0xc5, 0xe4, 0x28, 0x8b, 0x31, 0xd5, 0x9a,
		0x64, 0xc7, 0x08, 0x6c, 0x92, 0xb5, 0x06, 0x95, 0xe2, 0xec, 0x97, 0xba, 0xfb, 0x4e, 0x2b, 0x82,
	},
	[]byte{
		0xd9, 0xa9, 0x1a, 0x2c, 0xad, 0xac, 0x1a, 0xb4, 0xad, 0x79, 0x90, 0xab, 0x93, 0x59, 0x8b, 0x07,
		0x06, 0x3d, 0x44, 0xca, 0xca, 0xd9, 0xd5, 0xbe, 0x4c, 0x25, 0xaf, 0x44, 0xfa, 0xe0, 0x9c, 0xe6,
	},
	[]byte{
		0xe6, 0x0e, 0xa5, 0xcf, 0x99, 0xf7, 0xd0, 0xa0, 0x5e, 0x07, 0x00, 0x7a, 0xaf, 0x5d, 0x58, 0x9e,
		0x9d, 0xf5, 0x6b, 0x1b, 0xb3, 0xaa, 0x1d, 0x74, 0x81, 0x02, 0xa7, 0xb6, 0xa8, 0x6d, 0xb0, 0xfe,
	},
	[]byte{
		0x30, 0x39, 0xb1, 0x81, 0x2d, 0x89, 0xe5, 0x1d, 0x6e, 0xf0, 0xcb, 0xa6, 0x02, 0x86, 0xa7, 0x0b,
		0x07, 0xad, 0x99, 0x38, 0x66, 0x7d, 0xa1, 0xbe, 0x76, 0xcf, 0xaa, 0x17, 0xc6, 0xb6, 0x44, 0xf3,
	},
	[]byte{
		0x49, 0xff, 0xd9, 0x69, 0x8f, 0x7f, 0xa3, 0x10, 0xe0, 0x80, 0xd6, 0xf2, 0xb7, 0xc5, 0xc2, 0x05,
		0x1a, 0xc7, 0x81, 0x92, 0x01, 0x65, 0x69, 0x79, 0x3f, 0x21, 0x14, 0x6a, 0xa8, 0x9a, 0xd7, 0x53,
	},
	[]byte{
		0x33, 0x7c, 0xdd, 0xc9, 0x02, 0x9f, 0xe9, 0xfd, 0xa9, 0xfd, 0xaf, 0x49, 0x35, 0xc6, 0x12, 0x8c,
		0xc4, 0xdc, 0x64, 0xbe, 0x42, 0x2a, 0x6f, 0x72, 0xb6, 0x00, 0x7a, 0x97, 0x5e, 0x65, 0x05, 0x9a,
	},
	[]byte{
		0x30, 0x31, 0x4f, 0x26, 0x2f, 0xc3, 0x32, 0x55, 0x75, 0x53, 0xc6, 0xd1, 0x2f, 0x13, 0x38, 0x71,
		0x9f, 0xfe, 0x91, 0xd8, 0x6f, 0xaf, 0x05, 0x28, 0xf9, 0xfa, 0x1e, 0x70, 0x91, 0xe9, 0xd3, 0x0d,
	},
	[]byte{
		0x2b, 0x78, 0x4d, 0xc7, 0x40, 0x61, 0x71, 0x5a, 0x0d, 0xca, 0x2e, 0xf8, 0xc5, 0x8a, 0xfb, 0xda,
		0x3b, 0x27, 0xa8, 0x74, 0x5f, 0xd9, 0x94, 0x0d, 0xd8, 0x10, 0x89, 0xab, 0xf4, 0xf8, 0x81, 0x07,
	},
	[]byte{
		0xfe, 0xf4, 0xe8, 0x58, 0x54, 0x48, 0x03, 0x76, 0x18, 0xa7, 0x17, 0x05, 0x6a, 0x94, 0x3b, 0xd6,
		0xb0, 0xb4, 0xd6, 0xb8, 0xe5, 0x4d, 0x9c, 0x6d, 0x8b, 0x3f, 0xab, 0x2d, 0x3c, 0xef, 0xd1, 0x7c,
	},
	[]byte{
		0x27, 0x99, 0x28, 0x18, 0xcb, 0x92, 0x51, 0x01, 0x90, 0x7b, 0x55, 0x0d, 0xbd, 0x01, 0x4d, 0x9c,
		0x16, 0xec, 0x8b, 0xe1, 0x7b, 0x9a, 0xcf, 0x0f, 0xa4, 0x3d, 0xf7, 0xdd, 0xc0, 0xee, 0x50, 0xa2,
	},
	[]byte{
		0x75, 0xbb, 0x49, 0x68, 0x34, 0xc9, 0xec, 0x73, 0x55, 0x66, 0x1e, 0x42, 0x5c, 0xab, 0x87, 0xe6,
		0xf1, 0xda, 0x65, 0xe9, 0x76, 0x35, 0xbb, 0x86, 0xf6, 0x47, 0xae, 0x29, 0x81, 0x19, 0x66, 0x94,
	},
	[]byte{
		0xb0, 0x13, 0xe5, 0x0e, 0x65, 0x3d, 0xb8, 0xb8, 0xd7, 0xf2, 0xda, 0x35, 0x77, 0x35, 0xfb, 0xc2,
		0xd8, 0xe1, 0x3c, 0x94, 0xf1, 0xfa, 0x17, 0xc4, 0x32, 0xdd, 0x6c, 0x71, 0x9f, 0xa7, 0xd3, 0x03,
	},
	[]byte{
		0x4f, 0xb2, 0x6a, 0xbd, 0xe6, 0xaf, 0xf7, 0x6a, 0x32, 0x16, 0xaf, 0x44, 0xec, 0xe4, 0xea, 0xeb,
		0x60, 0x63, 0x81, 0x25, 0x0e, 0x4b, 0xd5, 0x63, 0x19, 0xa6, 0x2e, 0x0b, 0x42, 0x9e, 0xc3, 0x22,
	},
	[]byte{
		0xac, 0x03, 0x9e, 0x96, 0x29, 0x30, 0x46, 0xf4, 0xc5, 0x66, 0xd7, 0x57, 0xf9, 0x23, 0xcc, 0xca,
		0x1b, 0x0f, 0xe4, 0x9c, 0xc9, 0x34, 0xf7, 0x0d, 0x9d, 0x2d, 0x56, 0xc4, 0x92, 0x3b, 0xf2, 0x1f,
	},
	[]byte{
		0x62, 0x2e, 0xa8, 0x62, 0x01, 0x0d, 0x9c, 0x41, 0x42, 0xb6, 0xc8, 0xe3, 0x20, 0xdb, 0x02, 0xd8,
		0x94, 0xa7, 0x8e, 0x18, 0x81, 0x3c, 0xdc, 0x80, 0xaa, 0xa0, 0xd0, 0x47, 0x98, 0xa1, 0x08, 0x67,
	},
	[]byte{
		0xba, 0x5e, 0x4c, 0x0b, 0x1d, 0x77, 0x6d, 0x9e, 0x06, 0xec, 0x9d, 0x57, 0x15, 0x51, 0xe5, 0xb3,
		0x22, 0x82, 0xa8, 0x00, 0x0e, 0xf1, 0xe7, 0x78, 0x24, 0xc7, 0x82, 0x86, 0x7f, 0xaf, 0xb8, 0x2c,
	},
	[]byte{
		0xc2, 0x26, 0xd1, 0x17, 0xc9, 0x86, 0x42, 0x39, 0xc2, 0x52, 0x84, 0x4c, 0xf4, 0x3e, 0xab, 0x4e,
		0xe0, 0x0f, 0x64, 0xb8, 0x69, 0x0f, 0x95, 0xfd, 0x46, 0xfa, 0x4d, 0xab, 0x69, 0xcf, 0xc3, 0x17,
	},
	[]byte{
		0x51, 0xcf, 0xb0, 0x19, 0x67, 0x6f, 0xfb, 0x36, 0x22, 0x5d, 0x29, 0x03, 0xb8, 0xb8, 0xb8, 0xfb,
		0x81, 0x38, 0x27, 0x49, 0xf0, 0x88, 0x14, 0xa0, 0xc4, 0x03, 0x6b, 0x18, 0xaf, 0xa8, 0x3d, 0x39,
	},
	[]byte{
		0x8d, 0x63, 0xf4, 0x7f, 0xa7, 0x2d, 0xaa, 0xe1, 0x13, 0x87, 0xee, 0x93, 0x31, 0x66, 0x05, 0x24,
		0x6a, 0x52, 0x9d, 0xa4, 0x06, 0xd9, 0x15, 0x48, 0x72, 0xda, 0xc6, 0xee, 0xe8, 0x11, 0x42, 0xc0,
	},
	[]byte{
		0xad, 0x9c, 0x49, 0x3d, 0xb6, 0x46, 0x24, 0x10, 0x69, 0xaa, 0xa8, 0x28, 0x2d, 0x22, 0x01, 0xfd,
		0x4c, 0x73, 0x60, 0x3b, 0x90, 0x99, 0x01, 0x25, 0xa1, 0xcf, 0xc3, 0x17, 0xd6, 0x9a, 0x15, 0xf3,
	},
	[]byte{
		0x55, 0xa4, 0xc0, 0x74, 0x19, 0x5c, 0x6f, 0x51, 0x98, 0xf9, 0xb5, 0x46, 0x88, 0xc5, 0x3d, 0x44,
		0xfb, 0xa3, 0x07, 0x24, 0xde, 0xb5, 0x8f, 0xa1, 0x19, 0xfa, 0xf5, 0x5c, 0x48, 0x37, 0x67, 0x35,
	},
	[]byte{
		0x21, 0xf0, 0x83, 0x23, 0x16, 0x76, 0x75, 0x7f, 0xd9, 0xb6, 0x12, 0x5d, 0xf7, 0xfe, 0x09, 0x87,
		0xc1, 0x53, 0xc6, 0xf2, 0xb4, 0x18, 0xa2, 0xe7, 0xed, 0xd9, 0x4d, 0x7a, 0xd9, 0x13, 0xef, 0xed,
	},
	[]byte{
		0xd6, 0xc2, 0x32, 0x99, 0x28, 0x71, 0x63, 0x5b, 0x63, 0xd9, 0xf8, 0x3a, 0x3e, 0xca, 0x6d, 0x14,
		0x96, 0x87, 0xc1, 0xdd, 0x46, 0xc7, 0xb1, 0xc3, 0x65, 0x2b, 0xc2, 0x51, 0xfa, 0x69, 0x83, 0x03,
	},
	[]byte{
		0x14, 0xd4, 0xd9, 0x0e, 0x68, 0x98, 0xd4, 0xed, 0x69, 0x14, 0xd3, 0x18, 0x75, 0x01, 0x6a, 0x43,
		0x38, 0x26, 0xd9, 0x66, 0x9c, 0xd0, 0x09, 0x8b, 0xea, 0xa2, 0x88, 0x1c, 0xad, 0x2a, 0xe1, 0x11,
	},
	[]byte{
		0xda, 0xf0, 0x85, 0x97, 0xb9, 0x2a, 0x74, 0x32, 0xa7, 0x8e, 0xf4, 0x1d, 0xde, 0x20, 0x22, 0xa1,
		0xd2, 0xc5, 0x0f, 0x60, 0xc6, 0x79, 0x0e, 0x72, 0x2c, 0x51, 0xdd, 0x71, 0xda, 0x31, 0x2b, 0x86,
	},
	[]byte{
		0x6d, 0x8f, 0xfe, 0xb8, 0xf4, 0x92, 0x57, 0xe4, 0x49, 0x89, 0xb7, 0x23, 0xf3, 0x33, 0xbd, 0xa9,
		0x9e, 0xbf, 0x7a, 0xb1, 0x09, 0x40, 0x1e, 0x2e, 0x6b, 0xab, 0xf3, 0xae, 0x3e, 0x53, 0x60, 0x26,
	},
	[]byte{
		0xb7, 0x07, 0xad, 0xd5, 0x95, 0x7c, 0x02, 0x27, 0x6c, 0xb9, 0x18, 0x7a, 0xba, 0x8c, 0x24, 0x4c,
		0x85, 0xce, 0x24, 0xc5, 0x69, 0xfe, 0x34, 0x2a, 0x31, 0xbb, 0xcc, 0x8b, 0xff, 0x41, 0x18, 0xff,
	},
	[]byte{
		0x0a, 0x9e, 0xc1, 0x2d, 0x80, 0xd2, 0x2d, 0x82, 0x7f, 0xf6, 0x3f, 0x69, 0x78, 0x99, 0x8b, 0x3c,
		0xe9, 0xa4, 0x76, 0x4e, 0xe9, 0x37, 0x0c, 0x01, 0x86, 0xb3, 0x03, 0x14, 0xbb, 0x71, 0xa8, 0xe6,
	},
	[]byte{
		0xd7, 0x82, 0x09, 0xa5, 0x1d, 0xe0, 0x03, 0xb9, 0x66, 0x26, 0xe9, 0x5a, 0xf8, 0x44, 0x3c, 0x64,
		0x4a, 0x2f, 0x15, 0x2d, 0xf6, 0x5f, 0x00, 0x14, 0x88, 0x48, 0x62, 0xf2, 0x61, 0xed, 0x1c, 0x9d,
	},
	[]byte{
		0x0f, 0x29, 0xb8, 0xc2, 0xd2, 0x34, 0xc5, 0x8f, 0x27, 0x7b, 0x84, 0x34, 0xe9, 0x43, 0xe9, 0x03,
		0x13, 0x54, 0xe7, 0x04, 0x0a, 0x26, 0xef, 0x47, 0xfe, 0xfd, 0x2e, 0xdd, 0xa2, 0xd9, 0x90, 0x14,
	},
	[]byte{
		0x89, 0x1d, 0x39, 0x13, 0x5a, 0xc0, 0x2b, 0x37, 0x37, 0x09, 0xdb, 0x4d, 0x2f, 0x9b, 0x50, 0xb3,
		0x53, 0xd2, 0xfe, 0x14, 0xe3, 0x71, 0x7b, 0x28, 0x19, 0xd3, 0xbc, 0xf6, 0xa8, 0xe4, 0xd6, 0x15,
	},
	[]byte{
		0x33, 0x42, 0xcd, 0x28, 0xde, 0x5b, 0xdb, 0x8c, 0xad, 0xec, 0x3f, 0x25, 0x38, 0x74, 0x61, 0xfa,
		0x00, 0x65, 0x96, 0x47, 0xf1, 0x4c, 0x69, 0xb4, 0x25, 0x66, 0xef, 0x69, 0x46, 0x98, 0xba, 0x48,
	},
	[]byte{
		0x2f, 0xf3, 0xe2, 0x63, 0x56, 0xfa, 0x0b, 0x9b, 0xdd, 0x1c, 0xad, 0x2f, 0x8e, 0x5e, 0x77, 0xbd,
		0x29, 0xd8, 0x71, 0xdd, 0x41, 0xa2, 0x90, 0x94, 0x51, 0x61, 0xef, 0xc8, 0xf5, 0xbe, 0x98, 0xdc,
	},
	[]byte{
		0xf9, 0x74, 0xa8, 0xa1, 0xa8, 0x3c, 0xb8, 0xd3, 0xba, 0xa7, 0x44, 0x02, 0x07, 0xd0, 0x34, 0x00,
		0x09, 0xef, 0x5b, 0xd1, 0x91, 0x83, 0x56, 0x6a, 0x00, 0x94, 0x6f, 0x37, 0xb1, 0xd0, 0xbb, 0x03,
	},
	[]byte{
		0x23, 0x26, 0xe1, 0x8a, 0x80, 0x1e, 0xee, 0x4f, 0x0a, 0xd8, 0xcf, 0x04, 0x2c, 0x4a, 0x1b, 0xc8,
		0xa7, 0x90, 0xb9, 0x08, 0xa6, 0x04, 0xd7, 0x34, 0x3a, 0x0c, 0x26, 0x7a, 0x4f, 0xad, 0x6b, 0xd0,
	},
	[]byte{
		0x3f, 0x92, 0x05, 0x7c, 0x17, 0xa6, 0xec, 0xe8, 0x81, 0xe3, 0xc3, 0x2a, 0x07, 0x95, 0xa6, 0x37,
		0x5d, 0x05, 0x6f, 0x29, 0x3d, 0x25, 0x5c, 0xa8, 0x75, 0xad, 0x80, 0x28, 0x19, 0x95, 0x6b, 0x1a,
	},
	[]byte{
		0x8c, 0x23, 0x70, 0xce, 0x87, 0x19, 0x90, 0x51, 0x6a, 0x00, 0xf7, 0x40, 0xe7, 0xad, 0x3c, 0x42,
		0x3b, 0xa9, 0x86, 0x5c, 0xe3, 0x2c, 0xd9, 0xf2, 0xae, 0xe4, 0x0b, 0x0d, 0xfb, 0x39, 0x30, 0xad,
	},
	[]byte{
		0x28, 0x76, 0x4b, 0xc0, 0x4d, 0x6d, 0x9f, 0x5d, 0xc8, 0xb2, 0xd6, 0x02, 0x49, 0xfb, 0x5a, 0x5f,
		0x7b, 0x72, 0xe7, 0x01, 0xb8, 0x18, 0x5a, 0x43, 0xaf, 0xf5, 0xf4, 0xf4, 0xcb, 0xc2, 0xbf, 0x59,
	},
	[]byte{
		0x10, 0x6d, 0x38, 0xf1, 0x57, 0xec, 0xa6, 0x83, 0x50, 0x9f, 0x6c, 0x39, 0x48, 0xad, 0xaf, 0xe3,
		0x47, 0x30, 0x99, 0x6d, 0x83, 0x66, 0x51, 0x01, 0x00, 0x67, 0x22, 0x45, 0xa5, 0x39, 0x69, 0xa1,
	},
	[]byte{
		0x24, 0xd4, 0xe6, 0x06, 0x0d, 0x29, 0x54, 0x7d, 0xb5, 0xe5, 0xcc, 0xb9, 0xf9, 0x27, 0x5a, 0x5f,
		0x0e, 0x05, 0xba, 0xc7, 0xc1, 0x3a, 0xa3, 0xd4, 0xba, 0xbe, 0xc0, 0x03, 0x67, 0xe3, 0xc8, 0x37,
	},
	[]byte{
		0x31, 0x4b, 0x52, 0x67, 0xfb, 0x2f, 0x50, 0x47, 0x13, 0x3c, 0x4b, 0xad, 0xec, 0x0f, 0xfa, 0xa2,
		0x97, 0x3c, 0x5c, 0x2d, 0xb8, 0x0e, 0x5f, 0x71, 0x1f, 0xf6, 0x85, 0x1f, 0x8b, 0x7c, 0x11, 0x31,
	},
	[]byte{
		0xd5, 0x89, 0x8f, 0x9a, 0x9a, 0x6b, 0xee, 0x7f, 0x1a, 0x91, 0x9f, 0x96, 0x9e, 0x88, 0x6f, 0x8f,
		0xc1, 0x91, 0xc7, 0xcd, 0x32, 0x98, 0x19, 0xb9, 0x48, 0xd0, 0xb4, 0x05, 0x8c, 0x71, 0x00, 0xf0,
	},
	[]byte{
		0xb4, 0x64, 0xee, 0xfd, 0x23, 0x9a, 0x96, 0x7d, 0x36, 0xed, 0x8d, 0x2b, 0x1f, 0x22, 0x71, 0xec,
		0x72, 0xea, 0x73, 0x69, 0xc0, 0xd3, 0x35, 0x04, 0xff, 0xc4, 0x87, 0xdd, 0x0f, 0x2a, 0xb2, 0xe5,
	},
	[]byte{
		0x9f, 0x16, 0x83, 0x34, 0x2c, 0x2c, 0xa4, 0x16, 0x16, 0x1a, 0x8b, 0xd4, 0x43, 0xe8, 0x12, 0x89,
		0xf2, 0x19, 0xf7, 0x95, 0x79, 0xeb, 0xc4, 0x92, 0x50, 0xe4, 0xb9, 0xed, 0x79, 0x2c, 0x25, 0x56,
	},
	[]byte{
		0xbb, 0x29, 0xc7, 0x4f, 0x2a, 0x15, 0x50, 0x9d, 0x67, 0xf4, 0x7a, 0x9e, 0xda, 0x9b, 0xb5, 0xc6,
		0xd4, 0x7b, 0x30, 0x01, 0x34, 0x02, 0x16, 0xa1, 0x5c, 0x61, 0x81, 0xb2, 0x21, 0xfb, 0x29, 0xfd,
	},
	[]byte{
		0x1c, 0x49, 0x03, 0x34, 0xa9, 0xcb, 0xec, 0x73, 0xe5, 0xf0, 0xaa, 0xb7, 0x94, 0x98, 0xa2, 0x86,
		0x9d, 0x8e, 0xe1, 0x09, 0x1f, 0x47, 0x9f, 0x09, 0xcd, 0xce, 0x97, 0x5a, 0x63, 0x4c, 0x3b, 0x20,
	},
	[]byte{
		0x40, 0x91, 0x72, 0x32, 0x10, 0x3b, 0x84, 0xb3, 0xab, 0x42, 0x67, 0xca, 0x2f, 0x0e, 0x08, 0xf4,
		0x8c, 0x75, 0x18, 0xe8, 0xff, 0x26, 0x02, 0xe2, 0x28, 0x52, 0xe5, 0xac, 0xb9, 0x82, 0xd8, 0x69,
	},
	[]byte{
		0x61, 0x2f, 0x6f, 0xbf, 0xfd, 0x23, 0x7e, 0x84, 0x65, 0x08, 0x56, 0xf1, 0x5d, 0xb3, 0xce, 0x1c,
		0x36, 0x88, 0x02, 0x5a, 0xbe, 0xca, 0xef, 0xee, 0xbe, 0x2c, 0xa1, 0xd5, 0xa5, 0xb1, 0xb5, 0x3d,
	},
	[]byte{
		0x64, 0xd6, 0xdf, 0x51, 0xdb, 0x1c, 0x66, 0x14, 0x4d, 0x3c, 0xdb, 0x48, 0x2e, 0x9f, 0x9b, 0xad,
		0xe9, 0x73, 0xc8, 0xfd, 0x09, 0xad, 0xe4, 0x3e, 0x5c, 0x43, 0xa6, 0xb5, 0xbc, 0x14, 0xe8, 0xaf,
	},
	[]byte{
		0x1e, 0xe6, 0xc6, 0xfe, 0x92, 0xe8, 0x4a, 0xde, 0xd7, 0x2a, 0xec, 0x70, 0x53, 0xf1, 0x09, 0x59,
		0xbc, 0xb7, 0x7f, 0x65, 0x30, 0x40, 0xc3, 0x0a, 0x6c, 0xcc, 0x2c, 0xdc, 0x26, 0x80, 0x4e, 0x2e,
	},
	[]byte{
		0x2a, 0x04, 0x62, 0x74, 0x62, 0xb5, 0x95, 0xc3, 0x13, 0x6a, 0x5d, 0x24, 0x19, 0xfc, 0xbd, 0x7d,
		0x5a, 0x25, 0x82, 0x31, 0x47, 0x66, 0x97, 0x05, 0x33, 0xf6, 0x3a, 0x43, 0x4f, 0xff, 0xd2, 0x38,
	},
	[]byte{
		0xdf, 0x79, 0x43, 0x6e, 0x91, 0x49, 0x7e, 0x09, 0xcb, 0x9a, 0xe9, 0xa3, 0xd8, 0x16, 0x4a, 0xc6,
		0xa0, 0x7b, 0x01, 0x3f, 0x6f, 0xa2, 0xed, 0x67, 0xa2, 0x4d, 0xb9, 0x6c, 0xfa, 0x2c, 0xa4, 0x0c,
	},
	[]byte{
		0xb9, 0x40, 0xa7, 0x98, 0x2a, 0xe6, 0x53, 0x3b, 0x59, 0xf5, 0x17, 0xfa, 0x2b, 0xc2, 0xf4, 0x37,
		0x43, 0x78, 0xa3, 0xd3, 0x78, 0x0b, 0x93, 0x8e, 0x1e, 0x7e, 0x76, 0xa8, 0x9c, 0xd8, 0x2d, 0x6d,
	},
	[]byte{
		0xb9, 0x40, 0xa7, 0x98, 0x2a, 0xe6, 0x53, 0x3b, 0x59, 0xf5, 0x17, 0xfa, 0x2b, 0xc2, 0xf4, 0x37,
		0x43, 0x78, 0xa3, 0xd3, 0x78, 0x0b, 0x93, 0x8e, 0x1e, 0x7e, 0x76, 0xa8, 0x9c, 0xd8, 0x2d, 0x6d,
	},
}

var digests []blockdigest.Digest = []blockdigest.Digest{
	blockdigest.Digest{0xf1, 0x97, 0x68, 0xc1, 0x71, 0x15, 0x62, 0x91, 0x68, 0x19, 0xe9, 0x9e, 0x6d, 0x93, 0x68, 0x15, 0xed, 0x65, 0xef, 0xea, 0xb4, 0x01, 0xb5, 0xdd, 0x18, 0x2e, 0xf3, 0xe2, 0xdf, 0x3c, 0x50, 0x88},
	blockdigest.Digest{0xcb, 0xd8, 0x12, 0x63, 0xc7, 0x06, 0x8d, 0xcd, 0xfa, 0xf3, 0x41, 0x6c, 0xa6, 0x79, 0x3f, 0x6d, 0xc9, 0xd8, 0x44, 0xd5, 0x14, 0xcf, 0x79, 0x4b, 0xef, 0xe5, 0x59, 0x6a, 0x1c, 0x42, 0xcc, 0x72},
	blockdigest.Digest{0x82, 0xf1, 0xdb, 0x2b, 0x1b, 0xa7, 0x3d, 0x41, 0xd0, 0x71, 0x88, 0xe4, 0x03, 0x1f, 0x09, 0xf2, 0x08, 0x1e, 0xb1, 0x98, 0x68, 0x7b, 0x12, 0x47, 0xde, 0xb0, 0xb3, 0x82, 0xba, 0x48, 0xb6, 0x2c},
	blockdigest.Digest{0xc3, 0x95, 0xcb, 0x5f, 0x07, 0x29, 0x62, 0xa3, 0xda, 0x39, 0x85, 0x22, 0xca, 0x5b, 0xc7, 0xb4, 0xbe, 0x03, 0xfb, 0x09, 0x30, 0x4e, 0x2b, 0x62, 0x27, 0x7d, 0x90, 0x04, 0xbd, 0xc3, 0xcd, 0x94},
	blockdigest.Digest{0xa0, 0xd6, 0x44, 0x82, 0x2a, 0xdc, 0x2a, 0x42, 0x43, 0xd7, 0x90, 0xfc, 0x6a, 0x36, 0xc2, 0xc3, 0x64, 0x51, 0x36, 0xf7, 0x38, 0xc1, 0xd3, 0x9e, 0xbd, 0x5b, 0xd3, 0x36, 0x49, 0xdd, 0xf6, 0x38},
	blockdigest.Digest{0x4a, 0x91, 0x9d, 0xd8, 0xd7, 0xfe, 0x4b, 0x2d, 0xdb, 0x3d, 0x32, 0x30, 0x32, 0x3c, 0x2d, 0x27, 0xea, 0xd9, 0x28, 0x5c, 0x80, 0x1f, 0x59, 0x86, 0x01, 0x81, 0xc6, 0x9e, 0xe2, 0xb1, 0x63, 0xd6},
	blockdigest.Digest{0x2e, 0xef, 0xba, 0x85, 0x01, 0x0c, 0x6b, 0x32, 0xf6, 0x84, 0x51, 0x14, 0x76, 0x40, 0x14, 0xb7, 0x27, 0xd1, 0xb7, 0xb0, 0xde, 0xc9, 0xfb, 0xb9, 0x4f, 0xbc, 0x55, 0x3c, 0x61, 0xf9, 0x05, 0x4a},
	blockdigest.Digest{0x44, 0x41, 0x3f, 0x14, 0x44, 0x2e, 0x5e, 0x43, 0x45, 0x26, 0x3e, 0x75, 0x1c, 0x4e, 0x99, 0xf4, 0x4e, 0xe7, 0x7e, 0x93, 0xe9, 0xf9, 0x42, 0x63, 0xc2, 0x69, 0xfa, 0x32, 0x8d, 0x40, 0x3d, 0x7e},
	blockdigest.Digest{0x2f, 0xa4, 0x3c, 0x52, 0x68, 0xa1, 0x89, 0xb4, 0x23, 0x3d, 0x81, 0x4f, 0x6f, 0x63, 0x14, 0xcf, 0x38, 0xd1, 0x7c, 0x14, 0x1b, 0xbb, 0x7e, 0xbb, 0x1d, 0x0b, 0x73, 0xae, 0x2e, 0x57, 0x6f, 0x8a},
	blockdigest.Digest{0x09, 0xb5, 0x4f, 0x2f, 0x08, 0xd2, 0xf6, 0x77, 0xe0, 0xef, 0x07, 0x61, 0xdd, 0xf2, 0xf0, 0x71, 0x17, 0x51, 0x4a, 0x83, 0xb3, 0xae, 0x46, 0xcd, 0x63, 0xf8, 0xfa, 0xf4, 0xeb, 0x3d, 0xc4, 0xde},
	blockdigest.Digest{0x72, 0x10, 0x8a, 0x84, 0xf6, 0x32, 0x90, 0x58, 0xb1, 0x43, 0xf2, 0xf8, 0x63, 0xd2, 0x26, 0x0e, 0xf9, 0x13, 0xd5, 0x86, 0xc6, 0x4e, 0x42, 0x6b, 0xaf, 0xf1, 0x54, 0xde, 0xe4, 0xfc, 0x2a, 0x6e},
	blockdigest.Digest{0xf4, 0xcb, 0x98, 0x19, 0xd7, 0x02, 0x09, 0x7c, 0xa8, 0x0e, 0x72, 0xf5, 0x5b, 0x03, 0x2a, 0x4c, 0x12, 0x9e, 0x69, 0x52, 0x19, 0xec, 0xbc, 0x30, 0x0e, 0x60, 0x8f, 0x5b, 0x7d, 0x10, 0xce, 0x3c},
	blockdigest.Digest{0x97, 0x0b, 0x10, 0x23, 0xeb, 0x42, 0x11, 0xac, 0x37, 0x26, 0x3d, 0xd2, 0x3e, 0x6a, 0xdd, 0x53, 0x8b, 0xa5, 0x1b, 0x58, 0xc8, 0xe4, 0xd3, 0xe0, 0x98, 0xfb, 0x5b, 0x26, 0xf9, 0x15, 0x7b, 0xc2},
	blockdigest.Digest{0x4d, 0x1e, 0xee, 0xa7, 0xef, 0x63, 0x4f, 0x5e, 0x5e, 0x07, 0x70, 0x1b, 0xa5, 0xf0, 0x07, 0xc0, 0xc9, 0x16, 0x00, 0x7a, 0xf1, 0x4d, 0x2c, 0x66, 0x24, 0x6c, 0x48, 0xf7, 0xdb, 0x92, 0x3e, 0xc1},
	blockdigest.Digest{0x64, 0xfa, 0x30, 0x82, 0xd6, 0x48, 0xca, 0x98, 0x91, 0x45, 0x70, 0x9f, 0xef, 0x8e, 0x3b, 0xda, 0xcd, 0xb0, 0xc4, 0xb7, 0xe6, 0x63, 0xf3, 0x05, 0x29, 0xa9, 0x7e, 0x4c, 0x62, 0xb3, 0xca, 0xbf},
	blockdigest.Digest{0x32, 0x73, 0x95, 0x79, 0x2f, 0x09, 0x81, 0xec, 0x55, 0x92, 0x03, 0x5e, 0x8f, 0x5a, 0x1e, 0x6f, 0xfe, 0x04, 0xdf, 0x43, 0x05, 0xce, 0x10, 0xae, 0x3b, 0xe7, 0x28, 0x3f, 0xff, 0xc8, 0xb9, 0xe4},
	blockdigest.Digest{0x69, 0x6f, 0x24, 0xce, 0x33, 0x96, 0xd2, 0x2e, 0x82, 0x3c, 0x31, 0x90, 0x8b, 0xa1, 0x8c, 0x80, 0xc5, 0x43, 0xf6, 0x76, 0x1e, 0x2b, 0xe2, 0x36, 0xf2, 0x2e, 0xfc, 0x10, 0x54, 0x86, 0xf4, 0x3c},
	blockdigest.Digest{0xcf, 0xa1, 0x93, 0xf3, 0x7b, 0x51, 0xc9, 0x94, 0x8d, 0xf8, 0x84, 0x76, 0x56, 0xfa, 0x1f, 0x19, 0xd5, 0x5c, 0x59, 0x58, 0x52, 0x5b, 0x1c, 0xa7, 0xc8, 0x39, 0x89, 0xf9, 0x1a, 0xcc, 0x90, 0xbe},
	blockdigest.Digest{0x03, 0x12, 0x5f, 0xd4, 0xed, 0x69, 0x02, 0xf6, 0xb4, 0x7f, 0xa8, 0xda, 0x09, 0x88, 0xe9, 0x40, 0x9a, 0xb9, 0x7a, 0x26, 0xc9, 0xcb, 0x75, 0x64, 0xb3, 0xa5, 0x4d, 0x29, 0x24, 0xba, 0xed, 0x8d},
	blockdigest.Digest{0x26, 0x0e, 0xfb, 0xb2, 0x1c, 0x4a, 0x19, 0xaa, 0x07, 0x97, 0x0e, 0x98, 0xfd, 0x62, 0xf5, 0x48, 0x4a, 0x19, 0x2d, 0x87, 0x9c, 0xbd, 0x3e, 0xfb, 0xc7, 0x27, 0x8c, 0x1f, 0xc5, 0xe2, 0x87, 0xdf},
	blockdigest.Digest{0xb1, 0xe9, 0xed, 0x75, 0xba, 0x79, 0xd2, 0x19, 0xf1, 0x70, 0x9a, 0xe3, 0xfa, 0xc4, 0xce, 0xc4, 0xfd, 0x0e, 0xe4, 0x1f, 0xb4, 0x89, 0x1a, 0xab, 0xf8, 0x52, 0x74, 0xdc, 0x0a, 0x01, 0x08, 0xf3},
	blockdigest.Digest{0x60, 0xe6, 0x35, 0x50, 0x79, 0x27, 0x36, 0xb5, 0x9e, 0xf1, 0xbd, 0xd0, 0xcc, 0xd9, 0xf9, 0xf7, 0x41, 0x24, 0x59, 0x89, 0x5c, 0x1c, 0x2b, 0xe3, 0xce, 0xa7, 0x1c, 0xe5, 0xd1, 0x70, 0xa4, 0xca},
	blockdigest.Digest{0x2d, 0xe8, 0x5d, 0x52, 0xae, 0x52, 0xb2, 0xd0, 0x28, 0x45, 0xad, 0x1d, 0x8d, 0xdb, 0x34, 0x47, 0xdb, 0x7c, 0x80, 0x93, 0xe4, 0x1f, 0x6d, 0x22, 0x51, 0x16, 0xa1, 0x62, 0x9f, 0x8a, 0x0d, 0xa1},
	blockdigest.Digest{0xb6, 0x70, 0xe0, 0x50, 0xaa, 0x64, 0x1c, 0xe7, 0xd8, 0xd2, 0xe2, 0xd8, 0xe9, 0xa2, 0xd3, 0xa5, 0xdb, 0xbc, 0x84, 0x46, 0x05, 0x04, 0xbc, 0x03, 0xc6, 0x9e, 0xc1, 0x77, 0x15, 0x8d, 0x5b, 0x6d},
	blockdigest.Digest{0xe9, 0x4a, 0x79, 0x35, 0x7b, 0x2b, 0x1e, 0x0f, 0x15, 0x86, 0x0d, 0x43, 0xaf, 0x95, 0x78, 0x67, 0xc1, 0x8c, 0x04, 0x7c, 0x87, 0xef, 0xe8, 0xaf, 0x92, 0xb6, 0x55, 0xa6, 0x2c, 0x77, 0x9f, 0xc7},
	blockdigest.Digest{0xdf, 0x3c, 0xfe, 0xcf, 0x8d, 0x7d, 0xee, 0xae, 0xf2, 0x2e, 0xc4, 0xb6, 0xbf, 0xa6, 0x66, 0xb9, 0xc2, 0x76, 0x57, 0xe3, 0x5c, 0x1d, 0xa8, 0xdf, 0xcd, 0xa5, 0x40, 0x3c, 0xad, 0x9b, 0x5d, 0x69},
	blockdigest.Digest{0x63, 0x2d, 0xd9, 0x18, 0x5e, 0x90, 0x2c, 0xdf, 0xfe, 0x76, 0xce, 0x33, 0xe5, 0x63, 0xf8, 0xed, 0x62, 0x85, 0x78, 0x3d, 0x0c, 0x2b, 0x6b, 0x24, 0x25, 0x74, 0x37, 0x94, 0xe3, 0x89, 0x58, 0x3c},
	blockdigest.Digest{0x5e, 0x88, 0x0b, 0x92, 0x6f, 0x5b, 0x06, 0x4d, 0x2d, 0x14, 0xba, 0xce, 0x49, 0x62, 0xa1, 0xe1, 0xd5, 0x4c, 0x1f, 0xc6, 0x8b, 0x37, 0xd8, 0xcc, 0x36, 0x9a, 0x89, 0x56, 0x8e, 0x68, 0xf7, 0x58},
	blockdigest.Digest{0x34, 0x39, 0x0e, 0xa1, 0x61, 0xc2, 0xf4, 0xff, 0x01, 0x86, 0x3a, 0x5a, 0x7f, 0xa1, 0xc0, 0x66, 0xd6, 0xae, 0xc1, 0xcb, 0xb2, 0x65, 0x83, 0xd9, 0xe3, 0x3d, 0x09, 0xdf, 0x61, 0x77, 0x46, 0x73},
	blockdigest.Digest{0xf4, 0xeb, 0xde, 0x38, 0x0b, 0xcd, 0x2b, 0x40, 0x1d, 0x41, 0x47, 0x56, 0x5f, 0x09, 0xe2, 0x50, 0xdd, 0xa1, 0x83, 0x66, 0x74, 0x2e, 0x73, 0x27, 0x95, 0x02, 0xa7, 0xd3, 0x40, 0x14, 0x77, 0x6a},
	blockdigest.Digest{0xd5, 0x28, 0x5e, 0x98, 0x31, 0x45, 0xec, 0x8f, 0x1a, 0x8b, 0x83, 0x07, 0x94, 0xa3, 0x59, 0x60, 0x35, 0xbf, 0x22, 0x3f, 0x79, 0xdb, 0xbe, 0xb4, 0x9c, 0xbd, 0x0b, 0x68, 0x44, 0x0d, 0x5d, 0x24},
	blockdigest.Digest{0xcb, 0xbd, 0x9d, 0x2e, 0x40, 0xf4, 0x3f, 0xb4, 0x96, 0xf8, 0xd0, 0x92, 0x7c, 0xf3, 0xcb, 0x63, 0x10, 0xf3, 0x54, 0x0e, 0xc3, 0x1d, 0xca, 0xc6, 0x4d, 0xdd, 0xa0, 0x48, 0x46, 0x52, 0x30, 0xef},
	blockdigest.Digest{0xc2, 0xe9, 0xad, 0x59, 0xa5, 0x2e, 0xaa, 0x45, 0x03, 0x92, 0x43, 0x17, 0x52, 0x77, 0x60, 0x48, 0x76, 0x65, 0x3a, 0xb2, 0x70, 0x34, 0xe2, 0x23, 0x0c, 0x61, 0xdb, 0x8a, 0x83, 0x32, 0xce, 0x8a},
	blockdigest.Digest{0x0b, 0xcf, 0xb6, 0x02, 0x65, 0x96, 0x7b, 0xae, 0x27, 0x3f, 0x97, 0xe2, 0x7e, 0xac, 0x61, 0xde, 0x8a, 0x4c, 0xec, 0xd4, 0x1c, 0x75, 0x29, 0x2c, 0xe6, 0x82, 0xc0, 0xe4, 0x2d, 0x8f, 0x93, 0x5c},
	blockdigest.Digest{0xe6, 0xf4, 0x5c, 0x51, 0xf3, 0x83, 0xd1, 0x55, 0x63, 0x63, 0x11, 0xe0, 0x32, 0x07, 0x0e, 0xa7, 0x35, 0x2b, 0xcb, 0x8a, 0x5f, 0xf2, 0x7c, 0xc8, 0x51, 0x0f, 0xac, 0xff, 0x9d, 0xdc, 0x4d, 0x66},
	blockdigest.Digest{0x57, 0xd8, 0x03, 0x17, 0x0d, 0x72, 0x8c, 0x7f, 0x57, 0x70, 0x67, 0x81, 0xd4, 0xef, 0xea, 0x76, 0xa5, 0xca, 0xd0, 0x92, 0x61, 0x88, 0xdb, 0xa8, 0xe3, 0x46, 0x61, 0x3f, 0xbb, 0x35, 0xee, 0x6f},
	blockdigest.Digest{0x78, 0xdf, 0x24, 0x68, 0xb6, 0x7a, 0x97, 0x94, 0xe5, 0x5b, 0x11, 0xdd, 0xe7, 0x61, 0xaf, 0x41, 0x40, 0x60, 0x42, 0xa6, 0xec, 0xe7, 0x8d, 0xa4, 0xb2, 0x06, 0x1e, 0x8d, 0x4c, 0x16, 0x9b, 0x94},
	blockdigest.Digest{0x34, 0xe1, 0x8e, 0x00, 0x7f, 0xd4, 0xff, 0x76, 0x53, 0xc3, 0x3c, 0xdb, 0x3e, 0x8e, 0x00, 0xac, 0x1d, 0xaa, 0x73, 0x51, 0x9e, 0x03, 0x21, 0x44, 0x53, 0x06, 0x4c, 0xac, 0x61, 0x90, 0x9f, 0x1c},
	blockdigest.Digest{0xa7, 0x9a, 0x46, 0xec, 0xf9, 0xae, 0xe0, 0x5e, 0x3e, 0x82, 0x90, 0xe5, 0x33, 0x91, 0x30, 0x13, 0x9d, 0x5b, 0xda, 0x59, 0x94, 0xaa, 0xee, 0x5a, 0x5c, 0xf7, 0x1d, 0x77, 0x1d, 0x6e, 0x45, 0xae},
	blockdigest.Digest{0x5a, 0x97, 0xf9, 0xdf, 0x17, 0xea, 0x28, 0xf4, 0x63, 0x98, 0x50, 0x57, 0x5b, 0x32, 0x32, 0x59, 0x26, 0x1e, 0x83, 0x62, 0xaf, 0x0c, 0xfa, 0x59, 0x74, 0x01, 0x5b, 0xb7, 0x27, 0x20, 0x76, 0xd5},
	blockdigest.Digest{0x20, 0xeb, 0x39, 0xb1, 0xa4, 0x14, 0x38, 0x6a, 0xf7, 0x36, 0xd8, 0x68, 0x06, 0xe9, 0x9a, 0xab, 0xd2, 0xa5, 0x6a, 0x21, 0xaf, 0x81, 0x02, 0x06, 0x8c, 0xd8, 0x1c, 0x42, 0xdf, 0x91, 0x1b, 0x46},
	blockdigest.Digest{0x1e, 0x11, 0x4f, 0x42, 0x83, 0x54, 0x0a, 0x3f, 0x42, 0xfc, 0x9c, 0xf7, 0x51, 0xb5, 0x22, 0xdb, 0xcf, 0xa2, 0xe0, 0x79, 0x55, 0x6f, 0x59, 0x55, 0xae, 0x14, 0x5b, 0x5d, 0xfb, 0x5d, 0x52, 0x65},
	blockdigest.Digest{0xd2, 0x2a, 0x47, 0x80, 0x6f, 0xfa, 0xef, 0x13, 0x1f, 0x43, 0xdd, 0x4b, 0x15, 0xb3, 0xf9, 0x36, 0xe0, 0x08, 0x6e, 0xf9, 0x8b, 0x1c, 0xb6, 0x08, 0x86, 0xa8, 0x5f, 0x1f, 0x5a, 0xde, 0xfa, 0xc9},
	blockdigest.Digest{0xf6, 0xde, 0x30, 0x03, 0xd2, 0xb6, 0x22, 0x13, 0xe4, 0xf6, 0x4b, 0xca, 0x09, 0x8c, 0x82, 0x4a, 0x11, 0x7c, 0xa6, 0x29, 0x07, 0x15, 0x31, 0xcf, 0x8f, 0x91, 0x37, 0x65, 0x36, 0x45, 0xab, 0xbc},
	blockdigest.Digest{0x9a, 0x67, 0x69, 0x9f, 0xb9, 0xdb, 0x43, 0xed, 0xb2, 0xe3, 0xfe, 0xff, 0xe8, 0xa9, 0x12, 0x96, 0x01, 0x69, 0xf8, 0xd0, 0xd1, 0x36, 0x29, 0x8a, 0x66, 0x1a, 0xb4, 0xc1, 0xcb, 0xf1, 0xab, 0xa5},
	blockdigest.Digest{0x0d, 0xe7, 0x6f, 0xdc, 0x5a, 0xc5, 0xe4, 0x02, 0xb0, 0x39, 0xb4, 0xd6, 0x9a, 0x63, 0x8f, 0xa8, 0x2f, 0x97, 0x1d, 0xdb, 0x71, 0xc5, 0x50, 0x51, 0x02, 0xb7, 0x47, 0xc3, 0x30, 0x99, 0xbb, 0x8f},
	blockdigest.Digest{0xd0, 0x16, 0xe9, 0x88, 0x7d, 0xbc, 0x3a, 0x73, 0x03, 0x69, 0x05, 0x39, 0x3b, 0xb9, 0x57, 0xd0, 0xe2, 0xf5, 0x1f, 0xb8, 0x92, 0x20, 0x05, 0x63, 0x00, 0x30, 0x21, 0x71, 0x2f, 0x33, 0xb8, 0x16},
	blockdigest.Digest{0x05, 0x45, 0x7e, 0x98, 0x4b, 0x06, 0x76, 0x1e, 0x13, 0x44, 0x7e, 0x45, 0x79, 0xa9, 0x17, 0xbc, 0x85, 0x58, 0x9a, 0x5e, 0x10, 0x79, 0x91, 0x68, 0x16, 0x0d, 0x1f, 0xb5, 0xcd, 0x8a, 0x3e, 0x60},
	blockdigest.Digest{0x22, 0x2b, 0x42, 0x5b, 0xeb, 0xd4, 0x2f, 0x42, 0xb4, 0xa3, 0x03, 0xb8, 0xe2, 0x4e, 0xef, 0xd9, 0xf7, 0x30, 0x90, 0x88, 0xd7, 0x98, 0xde, 0x8c, 0xc7, 0x5d, 0xc4, 0x0f, 0xef, 0xec, 0x17, 0xba},
	blockdigest.Digest{0x55, 0x5f, 0x6a, 0xf5, 0x06, 0x8d, 0x50, 0xc2, 0x95, 0xe6, 0xe0, 0x68, 0xfc, 0x96, 0xb8, 0x3c, 0x69, 0xed, 0x6b, 0xfa, 0xb1, 0x42, 0x35, 0xbb, 0x37, 0xdc, 0xd0, 0x3b, 0x34, 0x90, 0x9a, 0x07},
	blockdigest.Digest{0x27, 0xf2, 0xd9, 0xca, 0x5f, 0xa3, 0x17, 0x99, 0xd5, 0x49, 0xe2, 0xbe, 0xfa, 0xf5, 0x30, 0x66, 0x42, 0x85, 0xac, 0x72, 0xf9, 0xf3, 0xb0, 0x1c, 0x4e, 0xc7, 0x96, 0x86, 0x5b, 0xac, 0x1f, 0x75},
	blockdigest.Digest{0xce, 0x48, 0x7e, 0x51, 0xf7, 0x7e, 0xad, 0xa0, 0x2a, 0xf3, 0xca, 0x94, 0xc7, 0x8e, 0xcf, 0x67, 0xc8, 0xa2, 0x90, 0xca, 0x92, 0xfc, 0x0f, 0x60, 0xda, 0x7c, 0xb3, 0xbd, 0x6b, 0x32, 0xf6, 0xe8},
	blockdigest.Digest{0xbe, 0xe9, 0x59, 0x01, 0x69, 0x9a, 0xa6, 0xe4, 0x3c, 0x43, 0xc4, 0x63, 0xc4, 0x30, 0x78, 0x3a, 0xd6, 0xfd, 0x7f, 0xd2, 0x90, 0x8a, 0xb2, 0xcb, 0xd1, 0xf3, 0x02, 0xc7, 0x9a, 0xff, 0x55, 0x6e},
	blockdigest.Digest{0xcd, 0x3a, 0x40, 0xc9, 0xbe, 0x90, 0xf6, 0x11, 0x17, 0x98, 0x56, 0x83, 0x7f, 0x13, 0x7c, 0x11, 0xb1, 0xd2, 0x2f, 0xda, 0x15, 0x19, 0xb8, 0x11, 0x79, 0x99, 0xc5, 0xb2, 0x56, 0x7d, 0x76, 0x4b},
	blockdigest.Digest{0x1c, 0xbd, 0x6d, 0x37, 0xbc, 0xb7, 0x7a, 0x8c, 0x22, 0xdf, 0x8b, 0x78, 0x92, 0x7e, 0x5d, 0x7e, 0xe4, 0xa7, 0x48, 0x32, 0x1d, 0x50, 0x3c, 0x98, 0x79, 0xe5, 0xdd, 0xab, 0x16, 0x3f, 0xdb, 0xf6},
	blockdigest.Digest{0x1c, 0xbd, 0x6d, 0x37, 0xbc, 0xb7, 0x7a, 0x8c, 0x22, 0xdf, 0x8b, 0x78, 0x92, 0x7e, 0x5d, 0x7e, 0xe4, 0xa7, 0x48, 0x32, 0x1d, 0x50, 0x3c, 0x98, 0x79, 0xe5, 0xdd, 0xab, 0x16, 0x3f, 0xdb, 0xf6},
}

var crcs []uint64 = []uint64{
	0x6c594ecf37b47d11,
	0xfb44e6b427896b62,
	0xe0691e94be087cf7,
	0x49ee15073ad8983c,
	0x532835c7dadfd29e,
	0xf0fc7117918f0faf,
	0x8e65a01b6cf8997e,
	0x9172696de4e42b35,
	0xbac7a87d7ffc843d,
	0x80802dbca72358e9,
	0x64025dae55dea916,
	0xe7971eef45e30af0,
	0xd33d029a2d80d8f6,
	0x142e4eb86e719200,
	0x739808722abc6c7d,
	0x08a3d61eda4cebb9,
	0x1b7b89661a16aa7d,
	0xb75079bfe971c814,
	0xabb15c0baa0188f6,
}

func TestIterate(t *testing.T) {

	logger.Initialise(logger.Configuration{
		Directory: ".",
		File:      "crc.log",
		Size:      262144,
		Count:     25,
	})
	defer logger.Finalise()

	blockring.Initialise()

	for i, b := range testblocks {
		blockring.Put(uint64(i+1), digests[i], b)
	}
	i := 0
	nonce := make([]byte, 8)
	expected := make([]byte, 8)
	iterator := blockring.NewRingReader()
	for iterator.Next() {
		crc := iterator.GetCRC()
		binary.BigEndian.PutUint64(nonce[:], crc)
		binary.BigEndian.PutUint64(expected[:], crcs[i])

		if crc != crcs[i] || !bytes.Equal(nonce, expected) {
			t.Errorf("nonce[%d]: actual: %x  expected: %x", i, nonce, expected)
		}
		i += 1
	}
}
