// Copyright (c) 2014-2016 Bitmark Inc.
// Use of this source code is governed by an ISC
// license that can be found in the LICENSE file.

package genesis

import (
	"github.com/bitmark-inc/bitmarkd/blockdigest"
	"github.com/bitmark-inc/bitmarkd/blockrecord"
)

// the starting block number
const (
	BlockNumber = uint64(1)
)

// this is block 1, the Genesis Block
// ----------------------------------

// LIVE Network
// ------------

var LiveGenesisBlock = blockrecord.PackedHeader([]byte{
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x0d, 0x10, 0xca, 0xbe,
	0xc1, 0x9b, 0x67, 0xc0, 0xe1, 0xdb, 0x1d, 0x06,
	0xd7, 0x02, 0x74, 0xac, 0xe0, 0xb0, 0x2e, 0xbb,
	0x10, 0x12, 0x8d, 0x45, 0x5e, 0x5f, 0xbc, 0x0e,
	0xf3, 0x8c, 0xb4, 0x8c, 0xb7, 0x9a, 0x80, 0x56,
	0xff, 0xff, 0x3f, 0x1f, 0x87, 0x9a, 0x6f, 0x82,
	0x64, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xff, 0xff, 0x11, 0x02, 0x01, 0x00, 0x04,
	0xb7, 0x9a, 0x80, 0x56, 0x08, 0xef, 0xd7, 0xb4,
	0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x6a, 0x00, 0x14, 0x44, 0x4f,
	0x57, 0x4e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x52,
	0x41, 0x42, 0x42, 0x49, 0x54, 0x20, 0x68, 0x6f,
	0x6c, 0x65, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x0d, 0x10, 0xca, 0xbe, 0xc1, 0x9b, 0x67, 0xc0,
	0xe1, 0xdb, 0x1d, 0x06, 0xd7, 0x02, 0x74, 0xac,
	0xe0, 0xb0, 0x2e, 0xbb, 0x10, 0x12, 0x8d, 0x45,
	0x5e, 0x5f, 0xbc, 0x0e, 0xf3, 0x8c, 0xb4, 0x8c,
})

// digest of the live genesis header
// 00116b7d5823fb5a26974e6fe5c8e2dc36fc57d19b288bd37cd19b4e31ed2826
var LiveGenesisDigest = blockdigest.Digest([...]byte{
	0x26, 0x28, 0xed, 0x31, 0x4e, 0x9b, 0xd1, 0x7c,
	0xd3, 0x8b, 0x28, 0x9b, 0xd1, 0x57, 0xfc, 0x36,
	0xdc, 0xe2, 0xc8, 0xe5, 0x6f, 0x4e, 0x97, 0x26,
	0x5a, 0xfb, 0x23, 0x58, 0x7d, 0x6b, 0x11, 0x00,
})

// TEST Network
// ------------

var TestGenesisBlock = blockrecord.PackedHeader([]byte{
	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xb7, 0xa3, 0x39, 0x34,
	0x1d, 0xb8, 0x51, 0xe0, 0x48, 0x31, 0x97, 0xc6,
	0xb5, 0x62, 0x25, 0x75, 0xc5, 0xe1, 0xb4, 0xa1,
	0xd7, 0xc0, 0xf3, 0x8a, 0x56, 0x76, 0x5c, 0x2e,
	0x55, 0xdf, 0xf9, 0x68, 0x4b, 0x42, 0x78, 0x54,
	0xff, 0xff, 0x3f, 0x1f, 0xd4, 0xba, 0x26, 0x1e,
	0x6d, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xff, 0xff, 0x11, 0x02, 0x01, 0x00, 0x04,
	0x4b, 0x42, 0x78, 0x54, 0x08, 0xb2, 0x01, 0x47,
	0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x20, 0x6a, 0x00, 0x1d, 0x42, 0x69,
	0x74, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x54, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x20, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x00, 0xb7, 0xa3, 0x39, 0x34, 0x1d, 0xb8, 0x51,
	0xe0, 0x48, 0x31, 0x97, 0xc6, 0xb5, 0x62, 0x25,
	0x75, 0xc5, 0xe1, 0xb4, 0xa1, 0xd7, 0xc0, 0xf3,
	0x8a, 0x56, 0x76, 0x5c, 0x2e, 0x55, 0xdf, 0xf9,
	0x68,
})

// digest of the test genesis header
// 003ef04960ce94f3761a176204095b8f9b0fa901858689ada581a8d514603894
var TestGenesisDigest = blockdigest.Digest([...]byte{
	0x94, 0x38, 0x60, 0x14, 0xd5, 0xa8, 0x81, 0xa5,
	0xad, 0x89, 0x86, 0x85, 0x01, 0xa9, 0x0f, 0x9b,
	0x8f, 0x5b, 0x09, 0x04, 0x62, 0x17, 0x1a, 0x76,
	0xf3, 0x94, 0xce, 0x60, 0x49, 0xf0, 0x3e, 0x00,
})
